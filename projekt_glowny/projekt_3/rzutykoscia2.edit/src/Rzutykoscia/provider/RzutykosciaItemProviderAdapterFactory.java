/**
 */
package Rzutykoscia.provider;

import Rzutykoscia.util.RzutykosciaAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RzutykosciaItemProviderAdapterFactory extends RzutykosciaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RzutykosciaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.Language} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LanguageItemProvider languageItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.Language}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLanguageAdapter() {
		if (languageItemProvider == null) {
			languageItemProvider = new LanguageItemProvider(this);
		}

		return languageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SumStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SumStatementItemProvider sumStatementItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SumStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSumStatementAdapter() {
		if (sumStatementItemProvider == null) {
			sumStatementItemProvider = new SumStatementItemProvider(this);
		}

		return sumStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SuccessStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessStatementItemProvider successStatementItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SuccessStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessStatementAdapter() {
		if (successStatementItemProvider == null) {
			successStatementItemProvider = new SuccessStatementItemProvider(this);
		}

		return successStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceExprSum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceExprSumItemProvider diceExprSumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceExprSum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceExprSumAdapter() {
		if (diceExprSumItemProvider == null) {
			diceExprSumItemProvider = new DiceExprSumItemProvider(this);
		}

		return diceExprSumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceExprSuk} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceExprSukItemProvider diceExprSukItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceExprSuk}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceExprSukAdapter() {
		if (diceExprSukItemProvider == null) {
			diceExprSukItemProvider = new DiceExprSukItemProvider(this);
		}

		return diceExprSukItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MulExpr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MulExprItemProvider mulExprItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MulExpr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMulExprAdapter() {
		if (mulExprItemProvider == null) {
			mulExprItemProvider = new MulExprItemProvider(this);
		}

		return mulExprItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.FormExpr} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormExprItemProvider formExprItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.FormExpr}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormExprAdapter() {
		if (formExprItemProvider == null) {
			formExprItemProvider = new FormExprItemProvider(this);
		}

		return formExprItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SingleDice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleDiceItemProvider singleDiceItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SingleDice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleDiceAdapter() {
		if (singleDiceItemProvider == null) {
			singleDiceItemProvider = new SingleDiceItemProvider(this);
		}

		return singleDiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MultiDice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiDiceItemProvider multiDiceItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MultiDice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiDiceAdapter() {
		if (multiDiceItemProvider == null) {
			multiDiceItemProvider = new MultiDiceItemProvider(this);
		}

		return multiDiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.Num} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumItemProvider numItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.Num}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumAdapter() {
		if (numItemProvider == null) {
			numItemProvider = new NumItemProvider(this);
		}

		return numItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.ExplosionRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExplosionRuleItemProvider explosionRuleItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.ExplosionRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExplosionRuleAdapter() {
		if (explosionRuleItemProvider == null) {
			explosionRuleItemProvider = new ExplosionRuleItemProvider(this);
		}

		return explosionRuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceMarkSum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceMarkSumItemProvider diceMarkSumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceMarkSum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceMarkSumAdapter() {
		if (diceMarkSumItemProvider == null) {
			diceMarkSumItemProvider = new DiceMarkSumItemProvider(this);
		}

		return diceMarkSumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceDiscSum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceDiscSumItemProvider diceDiscSumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceDiscSum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceDiscSumAdapter() {
		if (diceDiscSumItemProvider == null) {
			diceDiscSumItemProvider = new DiceDiscSumItemProvider(this);
		}

		return diceDiscSumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceRerollSum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceRerollSumItemProvider diceRerollSumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceRerollSum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceRerollSumAdapter() {
		if (diceRerollSumItemProvider == null) {
			diceRerollSumItemProvider = new DiceRerollSumItemProvider(this);
		}

		return diceRerollSumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SuccessBasic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessBasicItemProvider successBasicItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SuccessBasic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessBasicAdapter() {
		if (successBasicItemProvider == null) {
			successBasicItemProvider = new SuccessBasicItemProvider(this);
		}

		return successBasicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SuccessThreshold} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessThresholdItemProvider successThresholdItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SuccessThreshold}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessThresholdAdapter() {
		if (successThresholdItemProvider == null) {
			successThresholdItemProvider = new SuccessThresholdItemProvider(this);
		}

		return successThresholdItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SuccessMultiplier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessMultiplierItemProvider successMultiplierItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SuccessMultiplier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessMultiplierAdapter() {
		if (successMultiplierItemProvider == null) {
			successMultiplierItemProvider = new SuccessMultiplierItemProvider(this);
		}

		return successMultiplierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceMarkSuk} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceMarkSukItemProvider diceMarkSukItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceMarkSuk}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceMarkSukAdapter() {
		if (diceMarkSukItemProvider == null) {
			diceMarkSukItemProvider = new DiceMarkSukItemProvider(this);
		}

		return diceMarkSukItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceDiscSuk} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceDiscSukItemProvider diceDiscSukItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceDiscSuk}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceDiscSukAdapter() {
		if (diceDiscSukItemProvider == null) {
			diceDiscSukItemProvider = new DiceDiscSukItemProvider(this);
		}

		return diceDiscSukItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiceRerollSuk} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiceRerollSukItemProvider diceRerollSukItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiceRerollSuk}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiceRerollSukAdapter() {
		if (diceRerollSukItemProvider == null) {
			diceRerollSukItemProvider = new DiceRerollSukItemProvider(this);
		}

		return diceRerollSukItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MarkThan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarkThanItemProvider markThanItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MarkThan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarkThanAdapter() {
		if (markThanItemProvider == null) {
			markThanItemProvider = new MarkThanItemProvider(this);
		}

		return markThanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MarkHigh} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarkHighItemProvider markHighItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MarkHigh}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarkHighAdapter() {
		if (markHighItemProvider == null) {
			markHighItemProvider = new MarkHighItemProvider(this);
		}

		return markHighItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MarkKol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarkKolItemProvider markKolItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MarkKol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarkKolAdapter() {
		if (markKolItemProvider == null) {
			markKolItemProvider = new MarkKolItemProvider(this);
		}

		return markKolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.MarkNum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MarkNumItemProvider markNumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.MarkNum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMarkNumAdapter() {
		if (markNumItemProvider == null) {
			markNumItemProvider = new MarkNumItemProvider(this);
		}

		return markNumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.RerollHigh} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RerollHighItemProvider rerollHighItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.RerollHigh}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRerollHighAdapter() {
		if (rerollHighItemProvider == null) {
			rerollHighItemProvider = new RerollHighItemProvider(this);
		}

		return rerollHighItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.RerollThan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RerollThanItemProvider rerollThanItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.RerollThan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRerollThanAdapter() {
		if (rerollThanItemProvider == null) {
			rerollThanItemProvider = new RerollThanItemProvider(this);
		}

		return rerollThanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.RerollKol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RerollKolItemProvider rerollKolItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.RerollKol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRerollKolAdapter() {
		if (rerollKolItemProvider == null) {
			rerollKolItemProvider = new RerollKolItemProvider(this);
		}

		return rerollKolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.RerollNum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RerollNumItemProvider rerollNumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.RerollNum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRerollNumAdapter() {
		if (rerollNumItemProvider == null) {
			rerollNumItemProvider = new RerollNumItemProvider(this);
		}

		return rerollNumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiscardKol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscardKolItemProvider discardKolItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiscardKol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscardKolAdapter() {
		if (discardKolItemProvider == null) {
			discardKolItemProvider = new DiscardKolItemProvider(this);
		}

		return discardKolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiscardNum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscardNumItemProvider discardNumItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiscardNum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscardNumAdapter() {
		if (discardNumItemProvider == null) {
			discardNumItemProvider = new DiscardNumItemProvider(this);
		}

		return discardNumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiscardHigh} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscardHighItemProvider discardHighItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiscardHigh}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscardHighAdapter() {
		if (discardHighItemProvider == null) {
			discardHighItemProvider = new DiscardHighItemProvider(this);
		}

		return discardHighItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.DiscardThan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscardThanItemProvider discardThanItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.DiscardThan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscardThanAdapter() {
		if (discardThanItemProvider == null) {
			discardThanItemProvider = new DiscardThanItemProvider(this);
		}

		return discardThanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Rzutykoscia.SuccessCompositeRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessCompositeRuleItemProvider successCompositeRuleItemProvider;

	/**
	 * This creates an adapter for a {@link Rzutykoscia.SuccessCompositeRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessCompositeRuleAdapter() {
		if (successCompositeRuleItemProvider == null) {
			successCompositeRuleItemProvider = new SuccessCompositeRuleItemProvider(this);
		}

		return successCompositeRuleItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (languageItemProvider != null) languageItemProvider.dispose();
		if (sumStatementItemProvider != null) sumStatementItemProvider.dispose();
		if (successStatementItemProvider != null) successStatementItemProvider.dispose();
		if (diceExprSumItemProvider != null) diceExprSumItemProvider.dispose();
		if (diceExprSukItemProvider != null) diceExprSukItemProvider.dispose();
		if (mulExprItemProvider != null) mulExprItemProvider.dispose();
		if (formExprItemProvider != null) formExprItemProvider.dispose();
		if (singleDiceItemProvider != null) singleDiceItemProvider.dispose();
		if (multiDiceItemProvider != null) multiDiceItemProvider.dispose();
		if (numItemProvider != null) numItemProvider.dispose();
		if (explosionRuleItemProvider != null) explosionRuleItemProvider.dispose();
		if (diceMarkSumItemProvider != null) diceMarkSumItemProvider.dispose();
		if (diceDiscSumItemProvider != null) diceDiscSumItemProvider.dispose();
		if (diceRerollSumItemProvider != null) diceRerollSumItemProvider.dispose();
		if (successBasicItemProvider != null) successBasicItemProvider.dispose();
		if (successThresholdItemProvider != null) successThresholdItemProvider.dispose();
		if (successMultiplierItemProvider != null) successMultiplierItemProvider.dispose();
		if (diceMarkSukItemProvider != null) diceMarkSukItemProvider.dispose();
		if (diceDiscSukItemProvider != null) diceDiscSukItemProvider.dispose();
		if (diceRerollSukItemProvider != null) diceRerollSukItemProvider.dispose();
		if (markThanItemProvider != null) markThanItemProvider.dispose();
		if (markHighItemProvider != null) markHighItemProvider.dispose();
		if (markKolItemProvider != null) markKolItemProvider.dispose();
		if (markNumItemProvider != null) markNumItemProvider.dispose();
		if (rerollHighItemProvider != null) rerollHighItemProvider.dispose();
		if (rerollThanItemProvider != null) rerollThanItemProvider.dispose();
		if (rerollKolItemProvider != null) rerollKolItemProvider.dispose();
		if (rerollNumItemProvider != null) rerollNumItemProvider.dispose();
		if (discardKolItemProvider != null) discardKolItemProvider.dispose();
		if (discardNumItemProvider != null) discardNumItemProvider.dispose();
		if (discardHighItemProvider != null) discardHighItemProvider.dispose();
		if (discardThanItemProvider != null) discardThanItemProvider.dispose();
		if (successCompositeRuleItemProvider != null) successCompositeRuleItemProvider.dispose();
	}

}
